import{p as S}from"./pako.esm-QfSfXnLH.js";import{q as C}from"./qrcode-Bq4qzWCy.js";let c={title:"",sections:[]},h=1,E=1;const v=2e3,x=document.getElementById("add-section-btn"),p=document.getElementById("menu-sections"),I=document.getElementById("preview-iframe"),M=document.getElementById("size-display"),B=document.getElementById("size-warning"),g=document.getElementById("qr-code-img"),f=document.getElementById("qr-code-placeholder"),A=document.getElementById("save-json-btn"),R=document.getElementById("load-json-btn"),b=document.getElementById("json-file-input"),L=document.getElementById("menu-title-input");async function $(t){const e=new TextEncoder,i=await crypto.subtle.importKey("raw",e.encode(t),{name:"PBKDF2"},!1,["deriveKey"]);return crypto.subtle.deriveKey({name:"PBKDF2",salt:e.encode("static-menu-qr-salt"),iterations:1e5,hash:"SHA-256"},i,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}async function N(t,e){const i=await $(e),n=crypto.getRandomValues(new Uint8Array(12)),s=await crypto.subtle.encrypt({name:"AES-GCM",iv:n},i,new TextEncoder().encode(t)),o=new Uint8Array(n.length+s.byteLength);return o.set(n),o.set(new Uint8Array(s),n.length),btoa(String.fromCharCode.apply(null,o))}function w(t){const e=document.createElement("div");return e.className="menu-item",e.dataset.itemId=t.id,e.innerHTML=`
    <input type="text" class="item-name-input" placeholder="Item Name" value="${t.name}">
    <input type="text" class="item-price-input" placeholder="Price" value="${t.price}">
    <textarea class="item-desc-input" placeholder="Description">${t.description}</textarea>
    <div class="item-image-container">
      <label for="item-image-${t.id}" class="item-image-label">Add Image</label>
      <input type="file" id="item-image-${t.id}" class="item-image-input" accept="image/jpeg, image/png, image/gif">
      <div class="item-image-preview">
        ${t.image?`<img src="${t.image}" alt="Preview"><button class="remove-image-btn" title="Remove Image">&times;</button>`:"<span>No Image</span>"}
      </div>
    </div>
    <button class="delete-item-btn" title="Delete Item"><i class="fas fa-trash"></i></button>
  `,e}function j(t){const e=document.createElement("div");e.className="menu-section",e.dataset.sectionId=t.id,e.innerHTML=`
      <div class="menu-section-header">
        <input type="text" class="section-name-input" placeholder="Section Name (e.g., Appetizers)" value="${t.name}">
        <button class="delete-section-btn" title="Delete Section"><i class="fas fa-trash"></i> Delete Section</button>
      </div>
      <div class="menu-items">
        <!-- Menu items will be rendered here -->
      </div>
      <button class="add-item-btn"><i class="fas fa-plus"></i> Add Menu Item</button>
    `;const i=e.querySelector(".menu-items");return t.items.forEach(n=>{const s=w(n);i.appendChild(s)}),e}function y(){p.innerHTML="",c.sections.length===0&&(p.innerHTML='<p>No sections yet. Click "Add Section" to get started!</p>'),c.sections.forEach(t=>{const e=j(t);p.appendChild(e)}),m()}async function m(){const t=await D();I.contentWindow&&I.contentWindow.postMessage({type:"loadMenu",url:t},"*");const e=t.length;if(M.textContent=`${e} characters`,B.hidden=e<=v,c.sections.length>0&&e<=v)k(t),g.hidden=!1,f.style.display="none";else{g.src="",g.hidden=!0,f.style.display="flex";const i=f.querySelector("p");e>v?i.textContent="Menu is too large for a QR Code.":i.textContent="Your QR code will appear here."}}async function D(){if(c.sections.length===0&&!c.title)return"";const t=new Date().toISOString();let e="ip_not_available";try{const a=await fetch("https://api.ipify.org?format=json");a.ok&&(e=(await a.json()).ip)}catch(a){console.error("Could not fetch IP address:",a)}const i=await N(e,t),s=JSON.stringify({v:2,menu:c,meta:{ts:t,eid:i}}),o=S.deflate(s),r=btoa(String.fromCharCode.apply(null,o)).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"");return`${new URL("menu.html",window.location.href).href}#data=${r}`}function k(t){try{const n=C(0,"L");n.addData(t),n.make(),g.src=n.createDataURL(10,5)}catch(e){console.error("Error generating QR code:",e);const i=f.querySelector("p");i.textContent="Could not generate QR code.",g.hidden=!0,f.style.display="flex"}}x.addEventListener("click",()=>{const t={id:`section-${h++}`,name:"",items:[]};c.sections.push(t),y(),m()});p.addEventListener("click",t=>{const i=t.target.closest("button");if(i){if(i.classList.contains("delete-section-btn")){const n=i.closest(".menu-section");n.classList.add("hiding"),n.addEventListener("animationend",()=>{const s=n.dataset.sectionId;c.sections=c.sections.filter(o=>o.id!==s),y(),m()},{once:!0})}if(i.classList.contains("add-item-btn")){const n=i.closest(".menu-section").dataset.sectionId,s=c.sections.find(l=>l.id===n),o={id:`item-${E++}`,name:"",price:"",description:"",image:null};s.items.push(o);const d=i.previousElementSibling,r=w(o);d.appendChild(r),m()}if(i.classList.contains("delete-item-btn")){const n=i.closest(".menu-item");n.classList.add("hiding"),n.addEventListener("animationend",()=>{const o=i.closest(".menu-section").dataset.sectionId,d=n.dataset.itemId,r=c.sections.find(l=>l.id===o);r.items=r.items.filter(l=>l.id!==d),n.remove(),m()},{once:!0})}if(i.classList.contains("remove-image-btn")){const n=i.closest(".menu-item"),o=i.closest(".menu-section").dataset.sectionId,d=n.dataset.itemId,l=c.sections.find(u=>u.id===o).items.find(u=>u.id===d);l.image=null;const a=n.querySelector(".item-image-preview");a.innerHTML="<span>No Image</span>",m()}}});p.addEventListener("input",t=>{const e=t.target,i=e.closest(".menu-section");if(!i)return;const n=i.dataset.sectionId,s=c.sections.find(o=>o.id===n);if(e.classList.contains("section-name-input")&&(s.name=e.value),e.classList.contains("item-name-input")||e.classList.contains("item-price-input")||e.classList.contains("item-desc-input")){const d=e.closest(".menu-item").dataset.itemId,r=s.items.find(l=>l.id===d);e.classList.contains("item-name-input")&&(r.name=e.value),e.classList.contains("item-price-input")&&(r.price=e.value),e.classList.contains("item-desc-input")&&(r.description=e.value)}m()});p.addEventListener("change",async t=>{if(t.target.classList.contains("item-image-input")){const e=t.target.files[0];if(!e)return;const i=100;if(e.size>i*1024){alert(`Image is too large. Please select an image smaller than ${i}KB.`),t.target.value="";return}const n=t.target.closest(".menu-item"),o=t.target.closest(".menu-section").dataset.sectionId,d=n.dataset.itemId,l=c.sections.find(a=>a.id===o).items.find(a=>a.id===d);try{const a=await q(e);l.image=a;const u=n.querySelector(".item-image-preview");u.innerHTML=`<img src="${a}" alt="Preview"><button class="remove-image-btn" title="Remove Image">&times;</button>`,m()}catch(a){console.error("Error reading file:",a),alert("Could not read the image file.")}}});L.addEventListener("input",t=>{c.title=t.target.value,m()});A.addEventListener("click",()=>{if(c.sections.length===0){alert("Menu is empty. Nothing to save.");return}const t=JSON.stringify(c,null,2),e=new Blob([t],{type:"application/json"}),i=URL.createObjectURL(e),n=document.createElement("a");n.href=i,n.download="menu.json",n.click(),URL.revokeObjectURL(i)});R.addEventListener("click",()=>{b.click()});b.addEventListener("change",t=>{const e=t.target.files[0];if(!e)return;const i=new FileReader;i.onload=n=>{try{const s=JSON.parse(n.target.result);if(typeof s=="object"&&s.title!==void 0&&Array.isArray(s.sections)){c=s;const o=s.sections||[],d=Math.max(0,...o.map(a=>parseInt(a.id.split("-")[1]||0))),r=o.flatMap(a=>a.items),l=Math.max(0,...r.map(a=>parseInt(a.id.split("-")[1]||0)));h=d+1,E=l+1,L.value=c.title,y(),m()}else alert("Invalid or corrupted v2 JSON file.")}catch(s){alert("Error reading JSON file: "+s.message)}},i.readAsText(e),t.target.value=""});function q(t){return new Promise((e,i)=>{const n=new FileReader;n.onload=()=>e(n.result),n.onerror=s=>i(s),n.readAsDataURL(t)})}function P(){I.src="menu.html",y(),m()}P();
